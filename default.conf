worker_processes  2;
error_log logs/error.log;
events {
    worker_connections 1024;
}
http {
    lua_shared_dict dogs 1m;
    init_by_lua_block {
        local dogs = ngx.shared.dogs;
        dogs:set("head", "url-0")
        dogs:set("url-0", 0)
    }
    server {
        listen 8081;
        location / {
            if ($request_method = GET ) {
                set $target "";
                set $url "";
                rewrite_by_lua_block {
                    hostnum = string.sub(ngx.var.request_uri, 8)
                    hostnum = string.reverse(hostnum)
                    if hostnum ~= '' then 
                        num = tonumber(hostnum) 
                        if ( num ~= nil and num >= 0 and num == math.floor(num) and num ~= math.huge and num ~= nan ) then
                            former = string.sub(ngx.var.request_uri, 2, 7)
                            ngx.var.url = former
                            result = "url-"
                            ngx.var.target = result .. tostring(num)
                            ngx.say(ngx.var.target)
                        else
                            ngx.status = ngx.HTTP_NOT_FOUND
                            ngx.exit(ngx.status)
                        end
                    end
                }
                proxy_pass http://$target/&url;
            }
            if ($request_method = POST ) {
                set $target1 "";
                rewrite_by_lua_block {
                    local dogs = ngx.shared.dogs
                    ngx.var.target1 = (tostring(dogs:get("head")))
                    oldvalue=tonumber(dogs:get(tostring(ngx.var.target1)))+1
                    dogs:set(tostring(ngx.var.target1), oldvalue)
                    if ( oldvalue >= 500000 ) then
                        ngx.say("hhh")
                    end
                }
                proxy_pass http://$target1;
            }

        }
    }
}
